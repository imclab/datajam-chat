namespace :datajam_chat do
  desc "Install default settings for Chat"
  task :install_settings => :environment do
    DatajamChat::Engine.load_seed
  end

  desc "Install static files for Chat"
  task :install_assets do
    FileUtils.cp_r("#{DatajamChat::Engine.root}/app/assets/images/datajam_chat/", "#{Rails.root}/public/images")
    FileUtils.cp_r("#{DatajamChat::Engine.root}/app/assets/javascripts/datajam_chat/", "#{Rails.root}/public/javascripts")
    FileUtils.cp_r("#{DatajamChat::Engine.root}/app/assets/stylesheets/datajam_chat/", "#{Rails.root}/public/stylesheets")
  end

  desc "Uninstall settings for Chat"
  task :uninstall_settings => :environment do
    Setting.where(:namespace => 'datjam_chat').destroy_all
  end

  desc "Uninstall static files for Chat"
  task :uninstall_assets do
    FileUtils.rm_r("#{Rails.root}/public/images/datajam_chat", :force => true)
    FileUtils.rm_r("#{Rails.root}/public/javascripts/datajam_chat", :force => true)
    FileUtils.rm_r("#{Rails.root}/public/stylesheets/datajam_chat", :force => true)
  end

  task :build do
    require 'httparty'

    manifest = File.open(File.expand_path('../../../build.manifest', __FILE__), 'r')
    dir = File.expand_path('../../../app/assets/javascripts/datajam_chat', __FILE__)
    build = File.open("#{dir}/app-compiled.js", "w+")

    build.puts <<-EOT.strip_heredoc
      /**
       * Datajam Chat build file
       * Do not edit this file directly -- run `rake datajam_chat:build`
       */

      (function($, define, require){

        if(window.Datajam.DEBUG){

          $.getScript('/javascripts/datajam_chat/app.js');

        }else{
    EOT

    File.open("#{dir}/app.js", "r") do |file|
      until (line = (file.gets || '')) and (line.include?  '// Bootstrap the app')
        build.puts line
      end

      2.times { build.puts("\n") }

      while (line = manifest.gets)
        build.puts(File.open("#{dir}/#{line.chomp}").read.sub("define(", "define('chat/#{line.chomp.sub('.js', '')}', "))
      end

      2.times { build.puts("\n") }

      while (line = file.gets)
        build.puts line
      end
    end

    build.puts <<-EOT.strip_heredoc
        }
      })(jQuery, curl.define, curl);
    EOT

    build.rewind

    compiled = HTTParty::post(
      'http://closure-compiler.appspot.com/compile',
      :body => {
        compilation_level: 'SIMPLE_OPTIMIZATIONS',
        output_format: 'text',
        output_info: 'compiled_code',
        js_code: build.read})

    build.close

    File.open("#{dir}/app-compiled.min.js", "w+") do |file|
      require 'ruby-debug';debugger
      file.print compiled
    end

  end
end